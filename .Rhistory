install.packages("xtable", type="source")
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
.libPaths()
R_LIBS=C:/Users/fanfan/Documents/R/win-library/3.5
.libPaths()
Rscript -e "library(IRkernel)"
install.packages(BH)
install.packages("BH")
install.packages("bindr")
install.packages("bindrcpp")
install.packages("bitops")
install.packages("bmp")
install.packages("bookdown")
install.packages("broom")
install.packages("Cairo")
install.packages("caTools")
install.packages("cellrange")
install.packages("colorspace")
install.packages("countrycode")
install.packages("crosstalk")
install.packages("data.table")
install.packages("DBI")
install.packages("dbplyr")
install.packages("devtools")
install.packages("downloader")
install.packages("forcats")
install.packages("foreign")
install.packages("formatR")
install.packages("gapminder")
install.packages("geosphere")
install.packages("GGally")
install.packages("ggmap")
install.packages("gmm")
install.packages("gridExtra")
install.packages("haven")
install.packages("here")
install.packages("hexbin")
install.packages("htmlwidgets")
install.packages("igraph")
install.packages("imager")
install.packages("infer")
install.packages("listviewer")
install.packages("lubridate")
install.packages("mixpack")
install.packages("modelr")
install.packages("nycflights13")
install.packages("pryr")
install.packages("readxl")
install.packages("rematch2")
install.packages("reprex")
install.packages("repurrrsive")
install.packages("reticulate")
install.packages("rsconnect")
install.packages("survival")
install.packages("tmvtnorm")
install.packages("xaringan")
install.packages("base")
install.packages("base")
install.packages("base")
library(DBI)
library(nycflights13)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
dbListTables(con)
dbWriteTable(con, "flights", flights)
dbListTables(con)
library(DBI)
library(nycflights13)
flights <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights, "flights", flights)
dbListTables(flights)
dbListTables(con)
library(DBI)
library(nycflights13)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con, "flights", flights)
dbListTables(con)
View(flights)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbListTables(flights.db)
dbWriteTable(flights.db, "planes", planes)
dbListTables(flights.db)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbListTables(flights.db)
dbWriteTable(flights.db, "planes", planes)
dbListTables(flights.db)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbWriteTable(flights.db, "planes", planes)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbWriteTable(flights.db, "planes", planes)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
dbDisconnect(flights.db)
install.packages("tidyverse")
library(dplyr)
flights2008 <- dbConnect(drv=RSQLite::SQLite(), dbname="flights.db")
flights2008 <- tbl(flights2008, "flights")
flights2008 <- dbConnect(drv=RSQLite::SQLite(), dbname="flights.db")
dbListTables(flights.db)
flights2008 <- tbl(flights2008, "flights")
dbDisconnect(flights.db)
install.packages("bcmaps")
library(DBI)
library(nycflights13)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbWriteTable(flights.db, "planes", planes)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
dbDisconnect(flights.db)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
flights2008 <- dbConnect(SQLite(), "flights2008.db")
dbListTables(flights2008)
flights2008 <- tbl(flights2008, "flights")
#View(flights2008)
#head(flights2008)
busiest_airports <- flights2008 %>%
group_by(Origin)%>%
tally() %>%
arrange(desc(n))
head(busiest_airports, 10)
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
flights2008 <- dbConnect(SQLite(), "flights2008.db")
dbListTables(flights2008)
flights2008 <- tbl(flights2008, "flights")
#View(flights2008)
#head(flights2008)
busiest_airports <- flights2008 %>%
group_by(Origin)%>%
tally() %>%
arrange(desc(n))
head(busiest_airports, 10)
install.packages("testthat")
install.packages("sys")
install.packages("collection")
install.packages("wordcount")
install.packages("collections")
install.packages("wordcount")
setwd("~/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis")
# data_wrangling.R
# November 2018
# crime_csv_all_years.csv
# This script cleans the data by filtering the type = "Theft of Bicycle" and years are
# between 2003 - 2017 (full years).
# # This script takes two arguments: the absolute file path to save the unzipped file into.
#
# Usage: Rscript data_wrangling.R "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis"
#
# define main function
library(tidyverse)
# read in command line arguments
args <- commandArgs(trailingOnly = TRUE)
#file_save <- args[1]
#file_name <- args[2]
data <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/crime_csv_all_years.csv") # read the csv file into r
main <- function(){
# filter data to `TYPE` = `Theft of Bicycle` only, and years are between 2003 and 2017.
data %>%
filter(TYPE == "Theft of Bicycle" & YEAR %in% (2003:2017)) %>%
select(TYPE,YEAR,MONTH) %>% # only look at the TYPE, YEAR, MONTH columns for the purpose of this project
group_by(YEAR,MONTH) %>%
summarise(n=n()) # count the numbers of bicycle thefts reported in each month in each year
}
# call main function
data_all_years_bicycle <- main()
#write_csv(data_all_years_bicycle, "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv") # write the csv file into r
data <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/crime_csv_all_years.csv") # read the csv file into r
data <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/crime_csv_all_years.csv") # read the csv file into r
getwd()
setwd("~/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data")
getwd()
# data_wrangling.R
# November 2018
# crime_csv_all_years.csv
# This script cleans the data by filtering the type = "Theft of Bicycle" and years are
# between 2003 - 2017 (full years).
# # This script takes two arguments: the absolute file path to save the unzipped file into.
#
# Usage: Rscript data_wrangling.R "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis"
#
# define main function
library(tidyverse)
# read in command line arguments
args <- commandArgs(trailingOnly = TRUE)
#file_save <- args[1]
#file_write <- args[2]
data <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/crime_csv_all_years.csv") # read the csv file into r
main <- function(){
# filter data to `TYPE` = `Theft of Bicycle` only, and years are between 2003 and 2017.
data %>%
filter(TYPE == "Theft of Bicycle" & YEAR %in% (2003:2017)) %>%
select(TYPE,YEAR,MONTH) %>% # only look at the TYPE, YEAR, MONTH columns for the purpose of this project
group_by(YEAR,MONTH) %>%
summarise(n=n()) # count the numbers of bicycle thefts reported in each month in each year
}
# call main function
data_all_years_bicycle <- main()
write_csv(data_all_years_bicycle, "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv") # write the csv file into r
# data_viz_preliminary.R
# November 2018
# data_all_years_bicycle.csv
# This script generates a figure to be used for data analysis
# # This script takes two arguments: the data file path, and the figure path
#
# Usage: Rscript data_viz_preliminary.R
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv"
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/resulats"
#
# define main function
library(tidyverse)
# read in command line arguments
#args <- commandArgs(trailingOnly = TRUE)
#file_input <- args[1]
#img_output <- args[2]
# read the clean data csv file into r
data_all_years_bicycle <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv")
main <- function(){
plot <- data_all_years_bicycle %>% ggplot(aes(MONTH, n)) +
geom_line() +
facet_wrap(~ YEAR, scales = "free", ncol = 3)
ggsave("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/resulats", plot, device = "png")
}
# call main function and output command
viz_preliminary.png <- main()
# data_viz_preliminary.R
# November 2018
# data_all_years_bicycle.csv
# This script generates a figure to be used for data analysis
# # This script takes two arguments: the data file path, and the figure path
#
# Usage: Rscript data_viz_preliminary.R
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv"
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results"
#
# define main function
library(tidyverse)
# read in command line arguments
#args <- commandArgs(trailingOnly = TRUE)
#file_input <- args[1]
#img_output <- args[2]
# read the clean data csv file into r
data_all_years_bicycle <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv")
main <- function(){
plot <- data_all_years_bicycle %>% ggplot(aes(MONTH, n)) +
geom_line() +
facet_wrap(~ YEAR, scales = "free", ncol = 3)
ggsave("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results", plot, device = "png")
}
# call main function and output command
viz_preliminary.png <- main()
setwd("~/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis")
# data_viz_preliminary.R
# November 2018
# data_all_years_bicycle.csv
# This script generates a figure to be used for data analysis
# # This script takes two arguments: the data file path, and the figure path
#
# Usage: Rscript data_viz_preliminary.R
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv"
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/"
#
# define main function
library(tidyverse)
# read in command line arguments
#args <- commandArgs(trailingOnly = TRUE)
#file_input <- args[1]
#img_output <- args[2]
# read the clean data csv file into r
data_all_years_bicycle <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv")
main <- function(){
plot <- data_all_years_bicycle %>% ggplot(aes(MONTH, n)) +
geom_line() +
facet_wrap(~ YEAR, scales = "free", ncol = 3)
ggsave("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/", plot, device = "png")
}
# call main function and output command
viz_preliminary.png <- main()
# data_viz_preliminary.R
# November 2018
# data_all_years_bicycle.csv
# This script generates a figure to be used for data analysis
# # This script takes two arguments: the data file path, and the figure path
#
# Usage: Rscript data_viz_preliminary.R
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv"
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/"
#
# define main function
library(tidyverse)
library(ggplot2)
# read in command line arguments
#args <- commandArgs(trailingOnly = TRUE)
#file_input <- args[1]
#img_output <- args[2]
# read the clean data csv file into r
data_all_years_bicycle <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv")
main <- function(){
plot <- data_all_years_bicycle %>% ggplot(aes(MONTH, n)) +
geom_line() +
facet_wrap(~ YEAR, scales = "free", ncol = 3)
ggsave("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/", plot, device = "png")
}
# call main function and output command
viz_preliminary.png <- main()
# data_viz_preliminary.R
# November 2018
# data_all_years_bicycle.csv
# This script generates a figure to be used for data analysis
# # This script takes two arguments: the data file path, and the figure path
#
# Usage: Rscript data_viz_preliminary.R
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv"
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/"
#
# define main function
library(tidyverse)
library(ggplot2)
# read in command line arguments
#args <- commandArgs(trailingOnly = TRUE)
#file_input <- args[1]
#img_output <- args[2]
# read the clean data csv file into r
data_all_years_bicycle <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv")
main <- function(){
plot <- data_all_years_bicycle %>% ggplot(aes(MONTH, n)) +
geom_line() +
facet_wrap(~ YEAR, scales = "free", ncol = 3)
ggsave("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/", plot, device = "png")
}
# call main function and output command
viz_preliminary.png <- main()
plot <- data_all_years_bicycle %>% ggplot(aes(MONTH, n)) +
geom_line() +
facet_wrap(~ YEAR, scales = "free", ncol = 3)
plot
ggsave("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/", viz_preliminary, device = "png")
# data_viz_preliminary.R
# November 2018
# data_all_years_bicycle.csv
# This script generates a figure to be used for data analysis
# # This script takes two arguments: the data file path, and the figure path
#
# Usage: Rscript data_viz_preliminary.R
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv"
#        "C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/viz_preliminary.png"
#
# define main function
library(tidyverse)
library(ggplot2)
# read in command line arguments
#args <- commandArgs(trailingOnly = TRUE)
#file_input <- args[1]
#img_output <- args[2]
# read the clean data csv file into r
data_all_years_bicycle <- read.csv("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/data/data_all_years_bicycle.csv")
main <- function(){
viz_preliminary <- data_all_years_bicycle %>% ggplot(aes(MONTH, n)) +
geom_line() +
facet_wrap(~ YEAR, scales = "free", ncol = 3)
ggsave("C:/Users/fanfan/Documents/block3/DSCI_522_project/DSCI_522_Vancouver_Bike_Theft_Analysis/results/viz_preliminary.png", viz_preliminary, device = "png")
}
# call main function
main()
